{"ast":null,"code":"var _jsxFileName = \"/home/alejoeie/Documents/ProyectoIE0499/ProyectoIE-Alejo/front/src/components/body/auth/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/Notification';\nimport { isLength, isMatch } from '../../utils/validation/Validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  password: '',\n  cf_password: '',\n  err: '',\n  success: ''\n};\n\nfunction ResetPassword() {\n  _s();\n\n  const [data, setData] = useState(initialState);\n  const {\n    token\n  } = useParams();\n  const {\n    password,\n    cf_password,\n    err,\n    success\n  } = data;\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData({ ...data,\n      [name]: value,\n      err: '',\n      success: ''\n    });\n  };\n\n  const handleResetPassword = async () => {\n    if (isLength(password)) {\n      return setData({ ...data,\n        err: \"La contraseña debe tener al menos 6 caracteres.\",\n        success: \"\"\n      });\n    } else if (!isMatch(password, cf_password)) {\n      return setData({ ...data,\n        err: \"Las contraseñas no coinciden.\",\n        success: \"\"\n      });\n    } else {\n      try {\n        const res = await axios.post('/user/reset_pwd', {\n          password\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n        return setData({ ...data,\n          err: \"\",\n          success: res.data.message\n        });\n      } catch (err) {\n        err.response.data.message && setData({ ...data,\n          err: err.response.data.message,\n          success: ''\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fg_pass\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\xBFOlvido su constrase\\xF1a?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [err && showErrMsg(err), success && showSuccessMsg(success), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: handleChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Confirmar constrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"cf_password\",\n        id: \"cf_password\",\n        value: password,\n        onChange: handleChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetPassword,\n        children: \"Reestablecer Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResetPassword, \"3ScUSeCf1Nn5U7fLvVg9t+th+Eo=\", false, function () {\n  return [useParams];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/home/alejoeie/Documents/ProyectoIE0499/ProyectoIE-Alejo/front/src/components/body/auth/ResetPassword.js"],"names":["React","useState","axios","useParams","showErrMsg","showSuccessMsg","isLength","isMatch","initialState","password","cf_password","err","success","ResetPassword","data","setData","token","handleChangeInput","e","name","value","target","handleResetPassword","res","post","headers","Authorization","message","response"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport axios from 'axios';\nimport {useParams} from 'react-router-dom';\nimport {showErrMsg, showSuccessMsg} from '../../utils/notification/Notification';\nimport {isLength, isMatch} from '../../utils/validation/Validation';\n\n\nconst initialState = {\n    password: '',\n    cf_password: '',\n    err: '',\n    success: ''\n}\n\n\nfunction ResetPassword() {\n    const [data, setData] = useState(initialState);\n    const {token} = useParams();\n\n    const {password, cf_password, err, success} = data\n\n    const handleChangeInput = e => {\n        const {name, value} = e.target\n        setData({...data, [name]:value, err:'', success: ''})\n    }\n\n    const handleResetPassword = async () => {\n        if(isLength(password)){\n            return setData({...data, err: \"La contraseña debe tener al menos 6 caracteres.\", success:\"\"})\n\n        } else if(!isMatch(password, cf_password)){\n            return setData({...data, err: \"Las contraseñas no coinciden.\", success:\"\"})\n\n        } else {\n            try{\n                const res = await axios.post('/user/reset_pwd', {password}, {\n                    headers: {Authorization: token}\n                })\n\n                return setData({...data, err: \"\", success: res.data.message})\n\n            } catch (err){\n                err.response.data.message && setData({...data, err: err.response.data.message, success: ''})\n            }\n        }\n    }\n\n    return (\n        <div className=\"fg_pass\">\n        <h2>¿Olvido su constraseña?</h2>\n\n        <div className=\"row\">\n            {err && showErrMsg(err)}\n            {success && showSuccessMsg(success)}\n\n            <label htmlFor=\"password\">Contraseña</label>\n            <input type=\"password\" name=\"password\" id=\"password\" value={password}\n            onChange={handleChangeInput}/>\n\n            <label htmlFor=\"password\">Confirmar constraseña</label>\n            <input type=\"password\" name=\"cf_password\" id=\"cf_password\" value={password}\n            onChange={handleChangeInput}/>\n\n            <button onClick={handleResetPassword}>Reestablecer Contraseña</button>\n            \n            </div>\n    </div>\n    )\n}\n\nexport default ResetPassword"]},"metadata":{},"sourceType":"module"}